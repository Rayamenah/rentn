generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ROLE {
  agent
  user
  admin
}

model Rentn {
  rentnId   String   @id @default(uuid())
  email     String   @unique
  status    Status   @default(NOT_VERIFIED)
  password  String
  createdAt DateTime @default(now()) @db.Timestamptz()
  otp       String
  secret    String
  agent     Agent?
  admin     Admin?
  user      Users?

  @@index([rentnId, email])
}

model Agent {
  agentId       String        @id @default(uuid())
  firstName     String
  lastName      String
  email         String        @unique
  phoneNumber   String
  address       String
  gender        GENDER
  apartments    Apartment?
  rentn         Rentn         @relation(fields: [agentId], references: [rentnId])
  role          ROLE          @default(agent)
  createdAt     DateTime      @default(now()) @db.Timestamptz()
  updatedAt     DateTime      @updatedAt @db.Timestamptz()
  profileStatus ProfileStatus @default(ACTIVE)

  @@index([agentId, email])
}

model Users {
  userId    String   @id @default(uuid())
  email     String   @unique
  password  String
  role      ROLE     @default(user)
  rentn     Rentn    @relation(fields: [userId], references: [rentnId])
  createdAt DateTime @default(now()) @db.Timestamptz()
  updatedAt DateTime @updatedAt @db.Timestamptz()

  @@index([userId, email])
}

model Admin {
  adminId   String   @id @default(uuid())
  email     String   @unique
  password  String
  rentn     Rentn    @relation(fields: [adminId], references: [rentnId])
  role      ROLE     @default(admin)
  createdAt DateTime @default(now()) @db.Timestamptz()
  updatedAt DateTime @updatedAt @db.Timestamptz()

  @@index([adminId, email])
}

enum GENDER {
  Male
  Female
}

enum Status {
  NOT_VERIFIED
  VERIFIED
}

model Price {
  priceId   String    @id @default(uuid())
  createdAt DateTime  @default(now()) @db.Timestamptz()
  price     Decimal   @default(0.00) @db.Decimal(10, 2)
  tenure    Int       @default(1)
  updatedAt DateTime  @updatedAt @db.Timestamptz()
  apartment Apartment @relation(fields: [priceId], references: [apartmentId], onUpdate: Cascade)

  @@index([priceId])
}

model Apartment {
  apartmentId   String        @id @default(uuid())
  name          String        @db.VarChar(50)
  description   String        @db.Text()
  address       String        @db.VarChar(200)
  features      String[]
  community     String        @db.VarChar(50)
  createdAt     DateTime      @default(now()) @db.Timestamptz()
  apartmentType ApartmentType
  agent         Agent         @relation(fields: [apartmentId], references: [agentId])
  updatedAt     DateTime      @updatedAt @db.Timestamptz()
  price         Price?
  images        String[]

  @@unique([apartmentId, apartmentType])
  @@index([apartmentId])
}

enum ProfileStatus {
  SUSPENDED // suspended, facing judgement for faults
  SCAMMER // reported for scam related issue, could possibly lead to being disabled
  ACTIVE // current active user on the rentn platform
  INACTIVE // user who has been inactive for the last 30 days or more
  DISABLED // a user who request that his/her profile be deleted
}

enum ApartmentType {
  SELF_CONTAIN
  TWO_BEDROOM
  THREE_BEDROOM
  HOSTEL
  BEDSITTER
}

// run migration with npx prisma migrate dev --name init
// npx prisma format

// Update available 4.15.0 -> 5.1.1                          │
// │                                                         │
// │  This is a major update - please follow the guide at    │
// │  https://pris.ly/d/major-version-upgrade                │
// │                                                         │
// │  Run the following to update                            │
// │    npm i --save-dev prisma@latest                       │
// │    npm i @prisma/client@latest    
